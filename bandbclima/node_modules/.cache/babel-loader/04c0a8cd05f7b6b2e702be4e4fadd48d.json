{"ast":null,"code":"/*\n * EJS Embedded JavaScript templates\n * Copyright 2112 Matthew Eernisse (mde@fleegix.org)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n*/\n'use strict';\n/**\n * @file Embedded JavaScript templating engine. {@link http://ejs.co}\n * @author Matthew Eernisse <mde@fleegix.org>\n * @author Tiancheng \"Timothy\" Gu <timothygu99@gmail.com>\n * @project EJS\n * @license {@link http://www.apache.org/licenses/LICENSE-2.0 Apache License, Version 2.0}\n */\n\n/**\n * EJS internal functions.\n *\n * Technically this \"module\" lies in the same file as {@link module:ejs}, for\n * the sake of organization all the private functions re grouped into this\n * module.\n *\n * @module ejs-internal\n * @private\n */\n\n/**\n * Embedded JavaScript templating engine.\n *\n * @module ejs\n * @public\n */\n\nvar fs = require('fs');\n\nvar path = require('path');\n\nvar utils = require('./utils');\n\nvar scopeOptionWarned = false;\n\nvar _VERSION_STRING = require('../package.json').version;\n\nvar _DEFAULT_OPEN_DELIMITER = '<';\nvar _DEFAULT_CLOSE_DELIMITER = '>';\nvar _DEFAULT_DELIMITER = '%';\nvar _DEFAULT_LOCALS_NAME = 'locals';\nvar _NAME = 'ejs';\nvar _REGEX_STRING = '(<%%|%%>|<%=|<%-|<%_|<%#|<%|%>|-%>|_%>)';\nvar _OPTS_PASSABLE_WITH_DATA = ['delimiter', 'scope', 'context', 'debug', 'compileDebug', 'client', '_with', 'rmWhitespace', 'strict', 'filename', 'async']; // We don't allow 'cache' option to be passed in the data obj for\n// the normal `render` call, but this is where Express 2 & 3 put it\n// so we make an exception for `renderFile`\n\nvar _OPTS_PASSABLE_WITH_DATA_EXPRESS = _OPTS_PASSABLE_WITH_DATA.concat('cache');\n\nvar _BOM = /^\\uFEFF/;\n/**\n * EJS template function cache. This can be a LRU object from lru-cache NPM\n * module. By default, it is {@link module:utils.cache}, a simple in-process\n * cache that grows continuously.\n *\n * @type {Cache}\n */\n\nexports.cache = utils.cache;\n/**\n * Custom file loader. Useful for template preprocessing or restricting access\n * to a certain part of the filesystem.\n *\n * @type {fileLoader}\n */\n\nexports.fileLoader = fs.readFileSync;\n/**\n * Name of the object containing the locals.\n *\n * This variable is overridden by {@link Options}`.localsName` if it is not\n * `undefined`.\n *\n * @type {String}\n * @public\n */\n\nexports.localsName = _DEFAULT_LOCALS_NAME;\n/**\n * Promise implementation -- defaults to the native implementation if available\n * This is mostly just for testability\n *\n * @type {Function}\n * @public\n */\n\nexports.promiseImpl = new Function('return this;')().Promise;\n/**\n * Get the path to the included file from the parent file path and the\n * specified path.\n *\n * @param {String}  name     specified path\n * @param {String}  filename parent file path\n * @param {Boolean} isDir    parent file path whether is directory\n * @return {String}\n */\n\nexports.resolveInclude = function (name, filename, isDir) {\n  var dirname = path.dirname;\n  var extname = path.extname;\n  var resolve = path.resolve;\n  var includePath = resolve(isDir ? filename : dirname(filename), name);\n  var ext = extname(name);\n\n  if (!ext) {\n    includePath += '.ejs';\n  }\n\n  return includePath;\n};\n/**\n * Get the path to the included file by Options\n *\n * @param  {String}  path    specified path\n * @param  {Options} options compilation options\n * @return {String}\n */\n\n\nfunction getIncludePath(path, options) {\n  var includePath;\n  var filePath;\n  var views = options.views;\n  var match = /^[A-Za-z]+:\\\\|^\\//.exec(path); // Abs path\n\n  if (match && match.length) {\n    includePath = exports.resolveInclude(path.replace(/^\\/*/, ''), options.root || '/', true);\n  } // Relative paths\n  else {\n      // Look relative to a passed filename first\n      if (options.filename) {\n        filePath = exports.resolveInclude(path, options.filename);\n\n        if (fs.existsSync(filePath)) {\n          includePath = filePath;\n        }\n      } // Then look in any views directories\n\n\n      if (!includePath) {\n        if (Array.isArray(views) && views.some(function (v) {\n          filePath = exports.resolveInclude(path, v, true);\n          return fs.existsSync(filePath);\n        })) {\n          includePath = filePath;\n        }\n      }\n\n      if (!includePath) {\n        throw new Error('Could not find the include file \"' + options.escapeFunction(path) + '\"');\n      }\n    }\n\n  return includePath;\n}\n/**\n * Get the template from a string or a file, either compiled on-the-fly or\n * read from cache (if enabled), and cache the template if needed.\n *\n * If `template` is not set, the file specified in `options.filename` will be\n * read.\n *\n * If `options.cache` is true, this function reads the file from\n * `options.filename` so it must be set prior to calling this function.\n *\n * @memberof module:ejs-internal\n * @param {Options} options   compilation options\n * @param {String} [template] template source\n * @return {(TemplateFunction|ClientFunction)}\n * Depending on the value of `options.client`, either type might be returned.\n * @static\n */\n\n\nfunction handleCache(options, template) {\n  var func;\n  var filename = options.filename;\n  var hasTemplate = arguments.length > 1;\n\n  if (options.cache) {\n    if (!filename) {\n      throw new Error('cache option requires a filename');\n    }\n\n    func = exports.cache.get(filename);\n\n    if (func) {\n      return func;\n    }\n\n    if (!hasTemplate) {\n      template = fileLoader(filename).toString().replace(_BOM, '');\n    }\n  } else if (!hasTemplate) {\n    // istanbul ignore if: should not happen at all\n    if (!filename) {\n      throw new Error('Internal EJS error: no file name or template ' + 'provided');\n    }\n\n    template = fileLoader(filename).toString().replace(_BOM, '');\n  }\n\n  func = exports.compile(template, options);\n\n  if (options.cache) {\n    exports.cache.set(filename, func);\n  }\n\n  return func;\n}\n/**\n * Try calling handleCache with the given options and data and call the\n * callback with the result. If an error occurs, call the callback with\n * the error. Used by renderFile().\n *\n * @memberof module:ejs-internal\n * @param {Options} options    compilation options\n * @param {Object} data        template data\n * @param {RenderFileCallback} cb callback\n * @static\n */\n\n\nfunction tryHandleCache(options, data, cb) {\n  var result;\n\n  if (!cb) {\n    if (typeof exports.promiseImpl == 'function') {\n      return new exports.promiseImpl(function (resolve, reject) {\n        try {\n          result = handleCache(options)(data);\n          resolve(result);\n        } catch (err) {\n          reject(err);\n        }\n      });\n    } else {\n      throw new Error('Please provide a callback function');\n    }\n  } else {\n    try {\n      result = handleCache(options)(data);\n    } catch (err) {\n      return cb(err);\n    }\n\n    cb(null, result);\n  }\n}\n/**\n * fileLoader is independent\n *\n * @param {String} filePath ejs file path.\n * @return {String} The contents of the specified file.\n * @static\n */\n\n\nfunction fileLoader(filePath) {\n  return exports.fileLoader(filePath);\n}\n/**\n * Get the template function.\n *\n * If `options.cache` is `true`, then the template is cached.\n *\n * @memberof module:ejs-internal\n * @param {String}  path    path for the specified file\n * @param {Options} options compilation options\n * @return {(TemplateFunction|ClientFunction)}\n * Depending on the value of `options.client`, either type might be returned\n * @static\n */\n\n\nfunction includeFile(path, options) {\n  var opts = utils.shallowCopy({}, options);\n  opts.filename = getIncludePath(path, opts);\n  return handleCache(opts);\n}\n/**\n * Get the JavaScript source of an included file.\n *\n * @memberof module:ejs-internal\n * @param {String}  path    path for the specified file\n * @param {Options} options compilation options\n * @return {Object}\n * @static\n */\n\n\nfunction includeSource(path, options) {\n  var opts = utils.shallowCopy({}, options);\n  var includePath;\n  var template;\n  includePath = getIncludePath(path, opts);\n  template = fileLoader(includePath).toString().replace(_BOM, '');\n  opts.filename = includePath;\n  var templ = new Template(template, opts);\n  templ.generateSource();\n  return {\n    source: templ.source,\n    filename: includePath,\n    template: template\n  };\n}\n/**\n * Re-throw the given `err` in context to the `str` of ejs, `filename`, and\n * `lineno`.\n *\n * @implements RethrowCallback\n * @memberof module:ejs-internal\n * @param {Error}  err      Error object\n * @param {String} str      EJS source\n * @param {String} filename file name of the EJS file\n * @param {String} lineno   line number of the error\n * @static\n */\n\n\nfunction rethrow(err, str, flnm, lineno, esc) {\n  var lines = str.split('\\n');\n  var start = Math.max(lineno - 3, 0);\n  var end = Math.min(lines.length, lineno + 3);\n  var filename = esc(flnm); // eslint-disable-line\n  // Error context\n\n  var context = lines.slice(start, end).map(function (line, i) {\n    var curr = i + start + 1;\n    return (curr == lineno ? ' >> ' : '    ') + curr + '| ' + line;\n  }).join('\\n'); // Alter exception message\n\n  err.path = filename;\n  err.message = (filename || 'ejs') + ':' + lineno + '\\n' + context + '\\n\\n' + err.message;\n  throw err;\n}\n\nfunction stripSemi(str) {\n  return str.replace(/;(\\s*$)/, '$1');\n}\n/**\n * Compile the given `str` of ejs into a template function.\n *\n * @param {String}  template EJS template\n *\n * @param {Options} opts     compilation options\n *\n * @return {(TemplateFunction|ClientFunction)}\n * Depending on the value of `opts.client`, either type might be returned.\n * Note that the return type of the function also depends on the value of `opts.async`.\n * @public\n */\n\n\nexports.compile = function compile(template, opts) {\n  var templ; // v1 compat\n  // 'scope' is 'context'\n  // FIXME: Remove this in a future version\n\n  if (opts && opts.scope) {\n    if (!scopeOptionWarned) {\n      console.warn('`scope` option is deprecated and will be removed in EJS 3');\n      scopeOptionWarned = true;\n    }\n\n    if (!opts.context) {\n      opts.context = opts.scope;\n    }\n\n    delete opts.scope;\n  }\n\n  templ = new Template(template, opts);\n  return templ.compile();\n};\n/**\n * Render the given `template` of ejs.\n *\n * If you would like to include options but not data, you need to explicitly\n * call this function with `data` being an empty object or `null`.\n *\n * @param {String}   template EJS template\n * @param {Object}  [data={}] template data\n * @param {Options} [opts={}] compilation and rendering options\n * @return {(String|Promise<String>)}\n * Return value type depends on `opts.async`.\n * @public\n */\n\n\nexports.render = function (template, d, o) {\n  var data = d || {};\n  var opts = o || {}; // No options object -- if there are optiony names\n  // in the data, copy them to options\n\n  if (arguments.length == 2) {\n    utils.shallowCopyFromList(opts, data, _OPTS_PASSABLE_WITH_DATA);\n  }\n\n  return handleCache(opts, template)(data);\n};\n/**\n * Render an EJS file at the given `path` and callback `cb(err, str)`.\n *\n * If you would like to include options but not data, you need to explicitly\n * call this function with `data` being an empty object or `null`.\n *\n * @param {String}             path     path to the EJS file\n * @param {Object}            [data={}] template data\n * @param {Options}           [opts={}] compilation and rendering options\n * @param {RenderFileCallback} cb callback\n * @public\n */\n\n\nexports.renderFile = function () {\n  var args = Array.prototype.slice.call(arguments);\n  var filename = args.shift();\n  var cb;\n  var opts = {\n    filename: filename\n  };\n  var data;\n  var viewOpts; // Do we have a callback?\n\n  if (typeof arguments[arguments.length - 1] == 'function') {\n    cb = args.pop();\n  } // Do we have data/opts?\n\n\n  if (args.length) {\n    // Should always have data obj\n    data = args.shift(); // Normal passed opts (data obj + opts obj)\n\n    if (args.length) {\n      // Use shallowCopy so we don't pollute passed in opts obj with new vals\n      utils.shallowCopy(opts, args.pop());\n    } // Special casing for Express (settings + opts-in-data)\n    else {\n        // Express 3 and 4\n        if (data.settings) {\n          // Pull a few things from known locations\n          if (data.settings.views) {\n            opts.views = data.settings.views;\n          }\n\n          if (data.settings['view cache']) {\n            opts.cache = true;\n          } // Undocumented after Express 2, but still usable, esp. for\n          // items that are unsafe to be passed along with data, like `root`\n\n\n          viewOpts = data.settings['view options'];\n\n          if (viewOpts) {\n            utils.shallowCopy(opts, viewOpts);\n          }\n        } // Express 2 and lower, values set in app.locals, or people who just\n        // want to pass options in their data. NOTE: These values will override\n        // anything previously set in settings  or settings['view options']\n\n\n        utils.shallowCopyFromList(opts, data, _OPTS_PASSABLE_WITH_DATA_EXPRESS);\n      }\n\n    opts.filename = filename;\n  } else {\n    data = {};\n  }\n\n  return tryHandleCache(opts, data, cb);\n};\n/**\n * Clear intermediate JavaScript cache. Calls {@link Cache#reset}.\n * @public\n */\n\n/**\n * EJS template class\n * @public\n */\n\n\nexports.Template = Template;\n\nexports.clearCache = function () {\n  exports.cache.reset();\n};\n\nfunction Template(text, opts) {\n  opts = opts || {};\n  var options = {};\n  this.templateText = text;\n  this.mode = null;\n  this.truncate = false;\n  this.currentLine = 1;\n  this.source = '';\n  this.dependencies = [];\n  options.client = opts.client || false;\n  options.escapeFunction = opts.escape || opts.escapeFunction || utils.escapeXML;\n  options.compileDebug = opts.compileDebug !== false;\n  options.debug = !!opts.debug;\n  options.filename = opts.filename;\n  options.openDelimiter = opts.openDelimiter || exports.openDelimiter || _DEFAULT_OPEN_DELIMITER;\n  options.closeDelimiter = opts.closeDelimiter || exports.closeDelimiter || _DEFAULT_CLOSE_DELIMITER;\n  options.delimiter = opts.delimiter || exports.delimiter || _DEFAULT_DELIMITER;\n  options.strict = opts.strict || false;\n  options.context = opts.context;\n  options.cache = opts.cache || false;\n  options.rmWhitespace = opts.rmWhitespace;\n  options.root = opts.root;\n  options.outputFunctionName = opts.outputFunctionName;\n  options.localsName = opts.localsName || exports.localsName || _DEFAULT_LOCALS_NAME;\n  options.views = opts.views;\n  options.async = opts.async;\n  options.destructuredLocals = opts.destructuredLocals;\n  options.legacyInclude = typeof opts.legacyInclude != 'undefined' ? !!opts.legacyInclude : true;\n\n  if (options.strict) {\n    options._with = false;\n  } else {\n    options._with = typeof opts._with != 'undefined' ? opts._with : true;\n  }\n\n  this.opts = options;\n  this.regex = this.createRegex();\n}\n\nTemplate.modes = {\n  EVAL: 'eval',\n  ESCAPED: 'escaped',\n  RAW: 'raw',\n  COMMENT: 'comment',\n  LITERAL: 'literal'\n};\nTemplate.prototype = {\n  createRegex: function () {\n    var str = _REGEX_STRING;\n    var delim = utils.escapeRegExpChars(this.opts.delimiter);\n    var open = utils.escapeRegExpChars(this.opts.openDelimiter);\n    var close = utils.escapeRegExpChars(this.opts.closeDelimiter);\n    str = str.replace(/%/g, delim).replace(/</g, open).replace(/>/g, close);\n    return new RegExp(str);\n  },\n  compile: function () {\n    var src;\n    var fn;\n    var opts = this.opts;\n    var prepended = '';\n    var appended = '';\n    var escapeFn = opts.escapeFunction;\n    var ctor;\n\n    if (!this.source) {\n      this.generateSource();\n      prepended += '  var __output = \"\";\\n' + '  function __append(s) { if (s !== undefined && s !== null) __output += s }\\n';\n\n      if (opts.outputFunctionName) {\n        prepended += '  var ' + opts.outputFunctionName + ' = __append;' + '\\n';\n      }\n\n      if (opts.destructuredLocals && opts.destructuredLocals.length) {\n        var destructuring = '  var __locals = (' + opts.localsName + ' || {}),\\n';\n\n        for (var i = 0; i < opts.destructuredLocals.length; i++) {\n          var name = opts.destructuredLocals[i];\n\n          if (i > 0) {\n            destructuring += ',\\n  ';\n          }\n\n          destructuring += name + ' = __locals.' + name;\n        }\n\n        prepended += destructuring + ';\\n';\n      }\n\n      if (opts._with !== false) {\n        prepended += '  with (' + opts.localsName + ' || {}) {' + '\\n';\n        appended += '  }' + '\\n';\n      }\n\n      appended += '  return __output;' + '\\n';\n      this.source = prepended + this.source + appended;\n    }\n\n    if (opts.compileDebug) {\n      src = 'var __line = 1' + '\\n' + '  , __lines = ' + JSON.stringify(this.templateText) + '\\n' + '  , __filename = ' + (opts.filename ? JSON.stringify(opts.filename) : 'undefined') + ';' + '\\n' + 'try {' + '\\n' + this.source + '} catch (e) {' + '\\n' + '  rethrow(e, __lines, __filename, __line, escapeFn);' + '\\n' + '}' + '\\n';\n    } else {\n      src = this.source;\n    }\n\n    if (opts.client) {\n      src = 'escapeFn = escapeFn || ' + escapeFn.toString() + ';' + '\\n' + src;\n\n      if (opts.compileDebug) {\n        src = 'rethrow = rethrow || ' + rethrow.toString() + ';' + '\\n' + src;\n      }\n    }\n\n    if (opts.strict) {\n      src = '\"use strict\";\\n' + src;\n    }\n\n    if (opts.debug) {\n      console.log(src);\n    }\n\n    if (opts.compileDebug && opts.filename) {\n      src = src + '\\n' + '//# sourceURL=' + opts.filename + '\\n';\n    }\n\n    try {\n      if (opts.async) {\n        // Have to use generated function for this, since in envs without support,\n        // it breaks in parsing\n        try {\n          ctor = new Function('return (async function(){}).constructor;')();\n        } catch (e) {\n          if (e instanceof SyntaxError) {\n            throw new Error('This environment does not support async/await');\n          } else {\n            throw e;\n          }\n        }\n      } else {\n        ctor = Function;\n      }\n\n      fn = new ctor(opts.localsName + ', escapeFn, include, rethrow', src);\n    } catch (e) {\n      // istanbul ignore else\n      if (e instanceof SyntaxError) {\n        if (opts.filename) {\n          e.message += ' in ' + opts.filename;\n        }\n\n        e.message += ' while compiling ejs\\n\\n';\n        e.message += 'If the above error is not helpful, you may want to try EJS-Lint:\\n';\n        e.message += 'https://github.com/RyanZim/EJS-Lint';\n\n        if (!opts.async) {\n          e.message += '\\n';\n          e.message += 'Or, if you meant to create an async function, pass `async: true` as an option.';\n        }\n      }\n\n      throw e;\n    } // Return a callable function which will execute the function\n    // created by the source-code, with the passed data as locals\n    // Adds a local `include` function which allows full recursive include\n\n\n    var returnedFn = opts.client ? fn : function anonymous(data) {\n      var include = function (path, includeData) {\n        var d = utils.shallowCopy({}, data);\n\n        if (includeData) {\n          d = utils.shallowCopy(d, includeData);\n        }\n\n        return includeFile(path, opts)(d);\n      };\n\n      return fn.apply(opts.context, [data || {}, escapeFn, include, rethrow]);\n    };\n    returnedFn.dependencies = this.dependencies;\n\n    if (opts.filename && typeof Object.defineProperty === 'function') {\n      var filename = opts.filename;\n      var basename = path.basename(filename, path.extname(filename));\n\n      try {\n        Object.defineProperty(returnedFn, 'name', {\n          value: basename,\n          writable: false,\n          enumerable: false,\n          configurable: true\n        });\n      } catch (e) {\n        /* ignore */\n      }\n    }\n\n    return returnedFn;\n  },\n  generateSource: function () {\n    var opts = this.opts;\n\n    if (opts.rmWhitespace) {\n      // Have to use two separate replace here as `^` and `$` operators don't\n      // work well with `\\r` and empty lines don't work well with the `m` flag.\n      this.templateText = this.templateText.replace(/[\\r\\n]+/g, '\\n').replace(/^\\s+|\\s+$/gm, '');\n    } // Slurp spaces and tabs before <%_ and after _%>\n\n\n    this.templateText = this.templateText.replace(/[ \\t]*<%_/gm, '<%_').replace(/_%>[ \\t]*/gm, '_%>');\n    var self = this;\n    var matches = this.parseTemplateText();\n    var d = this.opts.delimiter;\n    var o = this.opts.openDelimiter;\n    var c = this.opts.closeDelimiter;\n\n    if (matches && matches.length) {\n      matches.forEach(function (line, index) {\n        var opening;\n        var closing;\n        var include;\n        var includeOpts;\n        var includeObj;\n        var includeSrc; // If this is an opening tag, check for closing tags\n        // FIXME: May end up with some false positives here\n        // Better to store modes as k/v with openDelimiter + delimiter as key\n        // Then this can simply check against the map\n\n        if (line.indexOf(o + d) === 0 // If it is a tag\n        && line.indexOf(o + d + d) !== 0) {\n          // and is not escaped\n          closing = matches[index + 2];\n\n          if (!(closing == d + c || closing == '-' + d + c || closing == '_' + d + c)) {\n            throw new Error('Could not find matching close tag for \"' + line + '\".');\n          }\n        } // HACK: backward-compat `include` preprocessor directives\n\n\n        if (opts.legacyInclude && (include = line.match(/^\\s*include\\s+(\\S+)/))) {\n          opening = matches[index - 1]; // Must be in EVAL or RAW mode\n\n          if (opening && (opening == o + d || opening == o + d + '-' || opening == o + d + '_')) {\n            includeOpts = utils.shallowCopy({}, self.opts);\n            includeObj = includeSource(include[1], includeOpts);\n\n            if (self.opts.compileDebug) {\n              includeSrc = '    ; (function(){' + '\\n' + '      var __line = 1' + '\\n' + '      , __lines = ' + JSON.stringify(includeObj.template) + '\\n' + '      , __filename = ' + JSON.stringify(includeObj.filename) + ';' + '\\n' + '      try {' + '\\n' + includeObj.source + '      } catch (e) {' + '\\n' + '        rethrow(e, __lines, __filename, __line, escapeFn);' + '\\n' + '      }' + '\\n' + '    ; }).call(this)' + '\\n';\n            } else {\n              includeSrc = '    ; (function(){' + '\\n' + includeObj.source + '    ; }).call(this)' + '\\n';\n            }\n\n            self.source += includeSrc;\n            self.dependencies.push(exports.resolveInclude(include[1], includeOpts.filename));\n            return;\n          }\n        }\n\n        self.scanLine(line);\n      });\n    }\n  },\n  parseTemplateText: function () {\n    var str = this.templateText;\n    var pat = this.regex;\n    var result = pat.exec(str);\n    var arr = [];\n    var firstPos;\n\n    while (result) {\n      firstPos = result.index;\n\n      if (firstPos !== 0) {\n        arr.push(str.substring(0, firstPos));\n        str = str.slice(firstPos);\n      }\n\n      arr.push(result[0]);\n      str = str.slice(result[0].length);\n      result = pat.exec(str);\n    }\n\n    if (str) {\n      arr.push(str);\n    }\n\n    return arr;\n  },\n  _addOutput: function (line) {\n    if (this.truncate) {\n      // Only replace single leading linebreak in the line after\n      // -%> tag -- this is the single, trailing linebreak\n      // after the tag that the truncation mode replaces\n      // Handle Win / Unix / old Mac linebreaks -- do the \\r\\n\n      // combo first in the regex-or\n      line = line.replace(/^(?:\\r\\n|\\r|\\n)/, '');\n      this.truncate = false;\n    }\n\n    if (!line) {\n      return line;\n    } // Preserve literal slashes\n\n\n    line = line.replace(/\\\\/g, '\\\\\\\\'); // Convert linebreaks\n\n    line = line.replace(/\\n/g, '\\\\n');\n    line = line.replace(/\\r/g, '\\\\r'); // Escape double-quotes\n    // - this will be the delimiter during execution\n\n    line = line.replace(/\"/g, '\\\\\"');\n    this.source += '    ; __append(\"' + line + '\")' + '\\n';\n  },\n  scanLine: function (line) {\n    var self = this;\n    var d = this.opts.delimiter;\n    var o = this.opts.openDelimiter;\n    var c = this.opts.closeDelimiter;\n    var newLineCount = 0;\n    newLineCount = line.split('\\n').length - 1;\n\n    switch (line) {\n      case o + d:\n      case o + d + '_':\n        this.mode = Template.modes.EVAL;\n        break;\n\n      case o + d + '=':\n        this.mode = Template.modes.ESCAPED;\n        break;\n\n      case o + d + '-':\n        this.mode = Template.modes.RAW;\n        break;\n\n      case o + d + '#':\n        this.mode = Template.modes.COMMENT;\n        break;\n\n      case o + d + d:\n        this.mode = Template.modes.LITERAL;\n        this.source += '    ; __append(\"' + line.replace(o + d + d, o + d) + '\")' + '\\n';\n        break;\n\n      case d + d + c:\n        this.mode = Template.modes.LITERAL;\n        this.source += '    ; __append(\"' + line.replace(d + d + c, d + c) + '\")' + '\\n';\n        break;\n\n      case d + c:\n      case '-' + d + c:\n      case '_' + d + c:\n        if (this.mode == Template.modes.LITERAL) {\n          this._addOutput(line);\n        }\n\n        this.mode = null;\n        this.truncate = line.indexOf('-') === 0 || line.indexOf('_') === 0;\n        break;\n\n      default:\n        // In script mode, depends on type of tag\n        if (this.mode) {\n          // If '//' is found without a line break, add a line break.\n          switch (this.mode) {\n            case Template.modes.EVAL:\n            case Template.modes.ESCAPED:\n            case Template.modes.RAW:\n              if (line.lastIndexOf('//') > line.lastIndexOf('\\n')) {\n                line += '\\n';\n              }\n\n          }\n\n          switch (this.mode) {\n            // Just executing code\n            case Template.modes.EVAL:\n              this.source += '    ; ' + line + '\\n';\n              break;\n            // Exec, esc, and output\n\n            case Template.modes.ESCAPED:\n              this.source += '    ; __append(escapeFn(' + stripSemi(line) + '))' + '\\n';\n              break;\n            // Exec and output\n\n            case Template.modes.RAW:\n              this.source += '    ; __append(' + stripSemi(line) + ')' + '\\n';\n              break;\n\n            case Template.modes.COMMENT:\n              // Do nothing\n              break;\n            // Literal <%% mode, append as raw output\n\n            case Template.modes.LITERAL:\n              this._addOutput(line);\n\n              break;\n          }\n        } // In string mode, just add the output\n        else {\n            this._addOutput(line);\n          }\n\n    }\n\n    if (self.opts.compileDebug && newLineCount) {\n      this.currentLine += newLineCount;\n      this.source += '    ; __line = ' + this.currentLine + '\\n';\n    }\n  }\n};\n/**\n * Escape characters reserved in XML.\n *\n * This is simply an export of {@link module:utils.escapeXML}.\n *\n * If `markup` is `undefined` or `null`, the empty string is returned.\n *\n * @param {String} markup Input string\n * @return {String} Escaped string\n * @public\n * @func\n * */\n\nexports.escapeXML = utils.escapeXML;\n/**\n * Express.js support.\n *\n * This is an alias for {@link module:ejs.renderFile}, in order to support\n * Express.js out-of-the-box.\n *\n * @func\n */\n\nexports.__express = exports.renderFile; // Add require support\n\n/* istanbul ignore else */\n\nif (require.extensions) {\n  require.extensions['.ejs'] = function (module, flnm) {\n    console.log('Deprecated: this API will go away in EJS v2.8');\n    var filename = flnm ||\n    /* istanbul ignore next */\n    module.filename;\n    var options = {\n      filename: filename,\n      client: true\n    };\n    var template = fileLoader(filename).toString();\n    var fn = exports.compile(template, options);\n\n    module._compile('module.exports = ' + fn.toString() + ';', filename);\n  };\n}\n/**\n * Version of EJS.\n *\n * @readonly\n * @type {String}\n * @public\n */\n\n\nexports.VERSION = _VERSION_STRING;\n/**\n * Name for detection of EJS.\n *\n * @readonly\n * @type {String}\n * @public\n */\n\nexports.name = _NAME;\n/* istanbul ignore if */\n\nif (typeof window != 'undefined') {\n  window.ejs = exports;\n}","map":{"version":3,"sources":["C:/Users/maxim/OneDrive/Escritorio/paraModificar/bandbclima/node_modules/ejs/lib/ejs.js"],"names":["fs","require","path","utils","scopeOptionWarned","_VERSION_STRING","version","_DEFAULT_OPEN_DELIMITER","_DEFAULT_CLOSE_DELIMITER","_DEFAULT_DELIMITER","_DEFAULT_LOCALS_NAME","_NAME","_REGEX_STRING","_OPTS_PASSABLE_WITH_DATA","_OPTS_PASSABLE_WITH_DATA_EXPRESS","concat","_BOM","exports","cache","fileLoader","readFileSync","localsName","promiseImpl","Function","Promise","resolveInclude","name","filename","isDir","dirname","extname","resolve","includePath","ext","getIncludePath","options","filePath","views","match","exec","length","replace","root","existsSync","Array","isArray","some","v","Error","escapeFunction","handleCache","template","func","hasTemplate","arguments","get","toString","compile","set","tryHandleCache","data","cb","result","reject","err","includeFile","opts","shallowCopy","includeSource","templ","Template","generateSource","source","rethrow","str","flnm","lineno","esc","lines","split","start","Math","max","end","min","context","slice","map","line","i","curr","join","message","stripSemi","scope","console","warn","render","d","o","shallowCopyFromList","renderFile","args","prototype","call","shift","viewOpts","pop","settings","clearCache","reset","text","templateText","mode","truncate","currentLine","dependencies","client","escape","escapeXML","compileDebug","debug","openDelimiter","closeDelimiter","delimiter","strict","rmWhitespace","outputFunctionName","async","destructuredLocals","legacyInclude","_with","regex","createRegex","modes","EVAL","ESCAPED","RAW","COMMENT","LITERAL","delim","escapeRegExpChars","open","close","RegExp","src","fn","prepended","appended","escapeFn","ctor","destructuring","JSON","stringify","log","e","SyntaxError","returnedFn","anonymous","include","includeData","apply","Object","defineProperty","basename","value","writable","enumerable","configurable","self","matches","parseTemplateText","c","forEach","index","opening","closing","includeOpts","includeObj","includeSrc","indexOf","push","scanLine","pat","arr","firstPos","substring","_addOutput","newLineCount","lastIndexOf","__express","extensions","module","_compile","VERSION","window","ejs"],"mappings":"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","sourcesContent":["/*\n * EJS Embedded JavaScript templates\n * Copyright 2112 Matthew Eernisse (mde@fleegix.org)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n*/\n\n'use strict';\n\n/**\n * @file Embedded JavaScript templating engine. {@link http://ejs.co}\n * @author Matthew Eernisse <mde@fleegix.org>\n * @author Tiancheng \"Timothy\" Gu <timothygu99@gmail.com>\n * @project EJS\n * @license {@link http://www.apache.org/licenses/LICENSE-2.0 Apache License, Version 2.0}\n */\n\n/**\n * EJS internal functions.\n *\n * Technically this \"module\" lies in the same file as {@link module:ejs}, for\n * the sake of organization all the private functions re grouped into this\n * module.\n *\n * @module ejs-internal\n * @private\n */\n\n/**\n * Embedded JavaScript templating engine.\n *\n * @module ejs\n * @public\n */\n\nvar fs = require('fs');\nvar path = require('path');\nvar utils = require('./utils');\n\nvar scopeOptionWarned = false;\nvar _VERSION_STRING = require('../package.json').version;\nvar _DEFAULT_OPEN_DELIMITER = '<';\nvar _DEFAULT_CLOSE_DELIMITER = '>';\nvar _DEFAULT_DELIMITER = '%';\nvar _DEFAULT_LOCALS_NAME = 'locals';\nvar _NAME = 'ejs';\nvar _REGEX_STRING = '(<%%|%%>|<%=|<%-|<%_|<%#|<%|%>|-%>|_%>)';\nvar _OPTS_PASSABLE_WITH_DATA = ['delimiter', 'scope', 'context', 'debug', 'compileDebug',\n  'client', '_with', 'rmWhitespace', 'strict', 'filename', 'async'];\n// We don't allow 'cache' option to be passed in the data obj for\n// the normal `render` call, but this is where Express 2 & 3 put it\n// so we make an exception for `renderFile`\nvar _OPTS_PASSABLE_WITH_DATA_EXPRESS = _OPTS_PASSABLE_WITH_DATA.concat('cache');\nvar _BOM = /^\\uFEFF/;\n\n/**\n * EJS template function cache. This can be a LRU object from lru-cache NPM\n * module. By default, it is {@link module:utils.cache}, a simple in-process\n * cache that grows continuously.\n *\n * @type {Cache}\n */\n\nexports.cache = utils.cache;\n\n/**\n * Custom file loader. Useful for template preprocessing or restricting access\n * to a certain part of the filesystem.\n *\n * @type {fileLoader}\n */\n\nexports.fileLoader = fs.readFileSync;\n\n/**\n * Name of the object containing the locals.\n *\n * This variable is overridden by {@link Options}`.localsName` if it is not\n * `undefined`.\n *\n * @type {String}\n * @public\n */\n\nexports.localsName = _DEFAULT_LOCALS_NAME;\n\n/**\n * Promise implementation -- defaults to the native implementation if available\n * This is mostly just for testability\n *\n * @type {Function}\n * @public\n */\n\nexports.promiseImpl = (new Function('return this;'))().Promise;\n\n/**\n * Get the path to the included file from the parent file path and the\n * specified path.\n *\n * @param {String}  name     specified path\n * @param {String}  filename parent file path\n * @param {Boolean} isDir    parent file path whether is directory\n * @return {String}\n */\nexports.resolveInclude = function(name, filename, isDir) {\n  var dirname = path.dirname;\n  var extname = path.extname;\n  var resolve = path.resolve;\n  var includePath = resolve(isDir ? filename : dirname(filename), name);\n  var ext = extname(name);\n  if (!ext) {\n    includePath += '.ejs';\n  }\n  return includePath;\n};\n\n/**\n * Get the path to the included file by Options\n *\n * @param  {String}  path    specified path\n * @param  {Options} options compilation options\n * @return {String}\n */\nfunction getIncludePath(path, options) {\n  var includePath;\n  var filePath;\n  var views = options.views;\n  var match = /^[A-Za-z]+:\\\\|^\\//.exec(path);\n\n  // Abs path\n  if (match && match.length) {\n    includePath = exports.resolveInclude(path.replace(/^\\/*/,''), options.root || '/', true);\n  }\n  // Relative paths\n  else {\n    // Look relative to a passed filename first\n    if (options.filename) {\n      filePath = exports.resolveInclude(path, options.filename);\n      if (fs.existsSync(filePath)) {\n        includePath = filePath;\n      }\n    }\n    // Then look in any views directories\n    if (!includePath) {\n      if (Array.isArray(views) && views.some(function (v) {\n        filePath = exports.resolveInclude(path, v, true);\n        return fs.existsSync(filePath);\n      })) {\n        includePath = filePath;\n      }\n    }\n    if (!includePath) {\n      throw new Error('Could not find the include file \"' +\n          options.escapeFunction(path) + '\"');\n    }\n  }\n  return includePath;\n}\n\n/**\n * Get the template from a string or a file, either compiled on-the-fly or\n * read from cache (if enabled), and cache the template if needed.\n *\n * If `template` is not set, the file specified in `options.filename` will be\n * read.\n *\n * If `options.cache` is true, this function reads the file from\n * `options.filename` so it must be set prior to calling this function.\n *\n * @memberof module:ejs-internal\n * @param {Options} options   compilation options\n * @param {String} [template] template source\n * @return {(TemplateFunction|ClientFunction)}\n * Depending on the value of `options.client`, either type might be returned.\n * @static\n */\n\nfunction handleCache(options, template) {\n  var func;\n  var filename = options.filename;\n  var hasTemplate = arguments.length > 1;\n\n  if (options.cache) {\n    if (!filename) {\n      throw new Error('cache option requires a filename');\n    }\n    func = exports.cache.get(filename);\n    if (func) {\n      return func;\n    }\n    if (!hasTemplate) {\n      template = fileLoader(filename).toString().replace(_BOM, '');\n    }\n  }\n  else if (!hasTemplate) {\n    // istanbul ignore if: should not happen at all\n    if (!filename) {\n      throw new Error('Internal EJS error: no file name or template '\n                    + 'provided');\n    }\n    template = fileLoader(filename).toString().replace(_BOM, '');\n  }\n  func = exports.compile(template, options);\n  if (options.cache) {\n    exports.cache.set(filename, func);\n  }\n  return func;\n}\n\n/**\n * Try calling handleCache with the given options and data and call the\n * callback with the result. If an error occurs, call the callback with\n * the error. Used by renderFile().\n *\n * @memberof module:ejs-internal\n * @param {Options} options    compilation options\n * @param {Object} data        template data\n * @param {RenderFileCallback} cb callback\n * @static\n */\n\nfunction tryHandleCache(options, data, cb) {\n  var result;\n  if (!cb) {\n    if (typeof exports.promiseImpl == 'function') {\n      return new exports.promiseImpl(function (resolve, reject) {\n        try {\n          result = handleCache(options)(data);\n          resolve(result);\n        }\n        catch (err) {\n          reject(err);\n        }\n      });\n    }\n    else {\n      throw new Error('Please provide a callback function');\n    }\n  }\n  else {\n    try {\n      result = handleCache(options)(data);\n    }\n    catch (err) {\n      return cb(err);\n    }\n\n    cb(null, result);\n  }\n}\n\n/**\n * fileLoader is independent\n *\n * @param {String} filePath ejs file path.\n * @return {String} The contents of the specified file.\n * @static\n */\n\nfunction fileLoader(filePath){\n  return exports.fileLoader(filePath);\n}\n\n/**\n * Get the template function.\n *\n * If `options.cache` is `true`, then the template is cached.\n *\n * @memberof module:ejs-internal\n * @param {String}  path    path for the specified file\n * @param {Options} options compilation options\n * @return {(TemplateFunction|ClientFunction)}\n * Depending on the value of `options.client`, either type might be returned\n * @static\n */\n\nfunction includeFile(path, options) {\n  var opts = utils.shallowCopy({}, options);\n  opts.filename = getIncludePath(path, opts);\n  return handleCache(opts);\n}\n\n/**\n * Get the JavaScript source of an included file.\n *\n * @memberof module:ejs-internal\n * @param {String}  path    path for the specified file\n * @param {Options} options compilation options\n * @return {Object}\n * @static\n */\n\nfunction includeSource(path, options) {\n  var opts = utils.shallowCopy({}, options);\n  var includePath;\n  var template;\n  includePath = getIncludePath(path, opts);\n  template = fileLoader(includePath).toString().replace(_BOM, '');\n  opts.filename = includePath;\n  var templ = new Template(template, opts);\n  templ.generateSource();\n  return {\n    source: templ.source,\n    filename: includePath,\n    template: template\n  };\n}\n\n/**\n * Re-throw the given `err` in context to the `str` of ejs, `filename`, and\n * `lineno`.\n *\n * @implements RethrowCallback\n * @memberof module:ejs-internal\n * @param {Error}  err      Error object\n * @param {String} str      EJS source\n * @param {String} filename file name of the EJS file\n * @param {String} lineno   line number of the error\n * @static\n */\n\nfunction rethrow(err, str, flnm, lineno, esc){\n  var lines = str.split('\\n');\n  var start = Math.max(lineno - 3, 0);\n  var end = Math.min(lines.length, lineno + 3);\n  var filename = esc(flnm); // eslint-disable-line\n  // Error context\n  var context = lines.slice(start, end).map(function (line, i){\n    var curr = i + start + 1;\n    return (curr == lineno ? ' >> ' : '    ')\n      + curr\n      + '| '\n      + line;\n  }).join('\\n');\n\n  // Alter exception message\n  err.path = filename;\n  err.message = (filename || 'ejs') + ':'\n    + lineno + '\\n'\n    + context + '\\n\\n'\n    + err.message;\n\n  throw err;\n}\n\nfunction stripSemi(str){\n  return str.replace(/;(\\s*$)/, '$1');\n}\n\n/**\n * Compile the given `str` of ejs into a template function.\n *\n * @param {String}  template EJS template\n *\n * @param {Options} opts     compilation options\n *\n * @return {(TemplateFunction|ClientFunction)}\n * Depending on the value of `opts.client`, either type might be returned.\n * Note that the return type of the function also depends on the value of `opts.async`.\n * @public\n */\n\nexports.compile = function compile(template, opts) {\n  var templ;\n\n  // v1 compat\n  // 'scope' is 'context'\n  // FIXME: Remove this in a future version\n  if (opts && opts.scope) {\n    if (!scopeOptionWarned){\n      console.warn('`scope` option is deprecated and will be removed in EJS 3');\n      scopeOptionWarned = true;\n    }\n    if (!opts.context) {\n      opts.context = opts.scope;\n    }\n    delete opts.scope;\n  }\n  templ = new Template(template, opts);\n  return templ.compile();\n};\n\n/**\n * Render the given `template` of ejs.\n *\n * If you would like to include options but not data, you need to explicitly\n * call this function with `data` being an empty object or `null`.\n *\n * @param {String}   template EJS template\n * @param {Object}  [data={}] template data\n * @param {Options} [opts={}] compilation and rendering options\n * @return {(String|Promise<String>)}\n * Return value type depends on `opts.async`.\n * @public\n */\n\nexports.render = function (template, d, o) {\n  var data = d || {};\n  var opts = o || {};\n\n  // No options object -- if there are optiony names\n  // in the data, copy them to options\n  if (arguments.length == 2) {\n    utils.shallowCopyFromList(opts, data, _OPTS_PASSABLE_WITH_DATA);\n  }\n\n  return handleCache(opts, template)(data);\n};\n\n/**\n * Render an EJS file at the given `path` and callback `cb(err, str)`.\n *\n * If you would like to include options but not data, you need to explicitly\n * call this function with `data` being an empty object or `null`.\n *\n * @param {String}             path     path to the EJS file\n * @param {Object}            [data={}] template data\n * @param {Options}           [opts={}] compilation and rendering options\n * @param {RenderFileCallback} cb callback\n * @public\n */\n\nexports.renderFile = function () {\n  var args = Array.prototype.slice.call(arguments);\n  var filename = args.shift();\n  var cb;\n  var opts = {filename: filename};\n  var data;\n  var viewOpts;\n\n  // Do we have a callback?\n  if (typeof arguments[arguments.length - 1] == 'function') {\n    cb = args.pop();\n  }\n  // Do we have data/opts?\n  if (args.length) {\n    // Should always have data obj\n    data = args.shift();\n    // Normal passed opts (data obj + opts obj)\n    if (args.length) {\n      // Use shallowCopy so we don't pollute passed in opts obj with new vals\n      utils.shallowCopy(opts, args.pop());\n    }\n    // Special casing for Express (settings + opts-in-data)\n    else {\n      // Express 3 and 4\n      if (data.settings) {\n        // Pull a few things from known locations\n        if (data.settings.views) {\n          opts.views = data.settings.views;\n        }\n        if (data.settings['view cache']) {\n          opts.cache = true;\n        }\n        // Undocumented after Express 2, but still usable, esp. for\n        // items that are unsafe to be passed along with data, like `root`\n        viewOpts = data.settings['view options'];\n        if (viewOpts) {\n          utils.shallowCopy(opts, viewOpts);\n        }\n      }\n      // Express 2 and lower, values set in app.locals, or people who just\n      // want to pass options in their data. NOTE: These values will override\n      // anything previously set in settings  or settings['view options']\n      utils.shallowCopyFromList(opts, data, _OPTS_PASSABLE_WITH_DATA_EXPRESS);\n    }\n    opts.filename = filename;\n  }\n  else {\n    data = {};\n  }\n\n  return tryHandleCache(opts, data, cb);\n};\n\n/**\n * Clear intermediate JavaScript cache. Calls {@link Cache#reset}.\n * @public\n */\n\n/**\n * EJS template class\n * @public\n */\nexports.Template = Template;\n\nexports.clearCache = function () {\n  exports.cache.reset();\n};\n\nfunction Template(text, opts) {\n  opts = opts || {};\n  var options = {};\n  this.templateText = text;\n  this.mode = null;\n  this.truncate = false;\n  this.currentLine = 1;\n  this.source = '';\n  this.dependencies = [];\n  options.client = opts.client || false;\n  options.escapeFunction = opts.escape || opts.escapeFunction || utils.escapeXML;\n  options.compileDebug = opts.compileDebug !== false;\n  options.debug = !!opts.debug;\n  options.filename = opts.filename;\n  options.openDelimiter = opts.openDelimiter || exports.openDelimiter || _DEFAULT_OPEN_DELIMITER;\n  options.closeDelimiter = opts.closeDelimiter || exports.closeDelimiter || _DEFAULT_CLOSE_DELIMITER;\n  options.delimiter = opts.delimiter || exports.delimiter || _DEFAULT_DELIMITER;\n  options.strict = opts.strict || false;\n  options.context = opts.context;\n  options.cache = opts.cache || false;\n  options.rmWhitespace = opts.rmWhitespace;\n  options.root = opts.root;\n  options.outputFunctionName = opts.outputFunctionName;\n  options.localsName = opts.localsName || exports.localsName || _DEFAULT_LOCALS_NAME;\n  options.views = opts.views;\n  options.async = opts.async;\n  options.destructuredLocals = opts.destructuredLocals;\n  options.legacyInclude = typeof opts.legacyInclude != 'undefined' ? !!opts.legacyInclude : true;\n\n  if (options.strict) {\n    options._with = false;\n  }\n  else {\n    options._with = typeof opts._with != 'undefined' ? opts._with : true;\n  }\n\n  this.opts = options;\n\n  this.regex = this.createRegex();\n}\n\nTemplate.modes = {\n  EVAL: 'eval',\n  ESCAPED: 'escaped',\n  RAW: 'raw',\n  COMMENT: 'comment',\n  LITERAL: 'literal'\n};\n\nTemplate.prototype = {\n  createRegex: function () {\n    var str = _REGEX_STRING;\n    var delim = utils.escapeRegExpChars(this.opts.delimiter);\n    var open = utils.escapeRegExpChars(this.opts.openDelimiter);\n    var close = utils.escapeRegExpChars(this.opts.closeDelimiter);\n    str = str.replace(/%/g, delim)\n      .replace(/</g, open)\n      .replace(/>/g, close);\n    return new RegExp(str);\n  },\n\n  compile: function () {\n    var src;\n    var fn;\n    var opts = this.opts;\n    var prepended = '';\n    var appended = '';\n    var escapeFn = opts.escapeFunction;\n    var ctor;\n\n    if (!this.source) {\n      this.generateSource();\n      prepended +=\n        '  var __output = \"\";\\n' +\n        '  function __append(s) { if (s !== undefined && s !== null) __output += s }\\n';\n      if (opts.outputFunctionName) {\n        prepended += '  var ' + opts.outputFunctionName + ' = __append;' + '\\n';\n      }\n      if (opts.destructuredLocals && opts.destructuredLocals.length) {\n        var destructuring = '  var __locals = (' + opts.localsName + ' || {}),\\n';\n        for (var i = 0; i < opts.destructuredLocals.length; i++) {\n          var name = opts.destructuredLocals[i];\n          if (i > 0) {\n            destructuring += ',\\n  ';\n          }\n          destructuring += name + ' = __locals.' + name;\n        }\n        prepended += destructuring + ';\\n';\n      }\n      if (opts._with !== false) {\n        prepended +=  '  with (' + opts.localsName + ' || {}) {' + '\\n';\n        appended += '  }' + '\\n';\n      }\n      appended += '  return __output;' + '\\n';\n      this.source = prepended + this.source + appended;\n    }\n\n    if (opts.compileDebug) {\n      src = 'var __line = 1' + '\\n'\n        + '  , __lines = ' + JSON.stringify(this.templateText) + '\\n'\n        + '  , __filename = ' + (opts.filename ?\n        JSON.stringify(opts.filename) : 'undefined') + ';' + '\\n'\n        + 'try {' + '\\n'\n        + this.source\n        + '} catch (e) {' + '\\n'\n        + '  rethrow(e, __lines, __filename, __line, escapeFn);' + '\\n'\n        + '}' + '\\n';\n    }\n    else {\n      src = this.source;\n    }\n\n    if (opts.client) {\n      src = 'escapeFn = escapeFn || ' + escapeFn.toString() + ';' + '\\n' + src;\n      if (opts.compileDebug) {\n        src = 'rethrow = rethrow || ' + rethrow.toString() + ';' + '\\n' + src;\n      }\n    }\n\n    if (opts.strict) {\n      src = '\"use strict\";\\n' + src;\n    }\n    if (opts.debug) {\n      console.log(src);\n    }\n    if (opts.compileDebug && opts.filename) {\n      src = src + '\\n'\n        + '//# sourceURL=' + opts.filename + '\\n';\n    }\n\n    try {\n      if (opts.async) {\n        // Have to use generated function for this, since in envs without support,\n        // it breaks in parsing\n        try {\n          ctor = (new Function('return (async function(){}).constructor;'))();\n        }\n        catch(e) {\n          if (e instanceof SyntaxError) {\n            throw new Error('This environment does not support async/await');\n          }\n          else {\n            throw e;\n          }\n        }\n      }\n      else {\n        ctor = Function;\n      }\n      fn = new ctor(opts.localsName + ', escapeFn, include, rethrow', src);\n    }\n    catch(e) {\n      // istanbul ignore else\n      if (e instanceof SyntaxError) {\n        if (opts.filename) {\n          e.message += ' in ' + opts.filename;\n        }\n        e.message += ' while compiling ejs\\n\\n';\n        e.message += 'If the above error is not helpful, you may want to try EJS-Lint:\\n';\n        e.message += 'https://github.com/RyanZim/EJS-Lint';\n        if (!opts.async) {\n          e.message += '\\n';\n          e.message += 'Or, if you meant to create an async function, pass `async: true` as an option.';\n        }\n      }\n      throw e;\n    }\n\n    // Return a callable function which will execute the function\n    // created by the source-code, with the passed data as locals\n    // Adds a local `include` function which allows full recursive include\n    var returnedFn = opts.client ? fn : function anonymous(data) {\n      var include = function (path, includeData) {\n        var d = utils.shallowCopy({}, data);\n        if (includeData) {\n          d = utils.shallowCopy(d, includeData);\n        }\n        return includeFile(path, opts)(d);\n      };\n      return fn.apply(opts.context, [data || {}, escapeFn, include, rethrow]);\n    };\n    returnedFn.dependencies = this.dependencies;\n    if (opts.filename && typeof Object.defineProperty === 'function') {\n      var filename = opts.filename;\n      var basename = path.basename(filename, path.extname(filename));\n      try {\n        Object.defineProperty(returnedFn, 'name', {\n          value: basename,\n          writable: false,\n          enumerable: false,\n          configurable: true\n        });\n      } catch (e) {/* ignore */}\n    }\n    return returnedFn;\n  },\n\n  generateSource: function () {\n    var opts = this.opts;\n\n    if (opts.rmWhitespace) {\n      // Have to use two separate replace here as `^` and `$` operators don't\n      // work well with `\\r` and empty lines don't work well with the `m` flag.\n      this.templateText =\n        this.templateText.replace(/[\\r\\n]+/g, '\\n').replace(/^\\s+|\\s+$/gm, '');\n    }\n\n    // Slurp spaces and tabs before <%_ and after _%>\n    this.templateText =\n      this.templateText.replace(/[ \\t]*<%_/gm, '<%_').replace(/_%>[ \\t]*/gm, '_%>');\n\n    var self = this;\n    var matches = this.parseTemplateText();\n    var d = this.opts.delimiter;\n    var o = this.opts.openDelimiter;\n    var c = this.opts.closeDelimiter;\n\n    if (matches && matches.length) {\n      matches.forEach(function (line, index) {\n        var opening;\n        var closing;\n        var include;\n        var includeOpts;\n        var includeObj;\n        var includeSrc;\n        // If this is an opening tag, check for closing tags\n        // FIXME: May end up with some false positives here\n        // Better to store modes as k/v with openDelimiter + delimiter as key\n        // Then this can simply check against the map\n        if ( line.indexOf(o + d) === 0        // If it is a tag\n          && line.indexOf(o + d + d) !== 0) { // and is not escaped\n          closing = matches[index + 2];\n          if (!(closing == d + c || closing == '-' + d + c || closing == '_' + d + c)) {\n            throw new Error('Could not find matching close tag for \"' + line + '\".');\n          }\n        }\n        // HACK: backward-compat `include` preprocessor directives\n        if (opts.legacyInclude && (include = line.match(/^\\s*include\\s+(\\S+)/))) {\n          opening = matches[index - 1];\n          // Must be in EVAL or RAW mode\n          if (opening && (opening == o + d || opening == o + d + '-' || opening == o + d + '_')) {\n            includeOpts = utils.shallowCopy({}, self.opts);\n            includeObj = includeSource(include[1], includeOpts);\n            if (self.opts.compileDebug) {\n              includeSrc =\n                  '    ; (function(){' + '\\n'\n                  + '      var __line = 1' + '\\n'\n                  + '      , __lines = ' + JSON.stringify(includeObj.template) + '\\n'\n                  + '      , __filename = ' + JSON.stringify(includeObj.filename) + ';' + '\\n'\n                  + '      try {' + '\\n'\n                  + includeObj.source\n                  + '      } catch (e) {' + '\\n'\n                  + '        rethrow(e, __lines, __filename, __line, escapeFn);' + '\\n'\n                  + '      }' + '\\n'\n                  + '    ; }).call(this)' + '\\n';\n            }else{\n              includeSrc = '    ; (function(){' + '\\n' + includeObj.source +\n                  '    ; }).call(this)' + '\\n';\n            }\n            self.source += includeSrc;\n            self.dependencies.push(exports.resolveInclude(include[1],\n              includeOpts.filename));\n            return;\n          }\n        }\n        self.scanLine(line);\n      });\n    }\n\n  },\n\n  parseTemplateText: function () {\n    var str = this.templateText;\n    var pat = this.regex;\n    var result = pat.exec(str);\n    var arr = [];\n    var firstPos;\n\n    while (result) {\n      firstPos = result.index;\n\n      if (firstPos !== 0) {\n        arr.push(str.substring(0, firstPos));\n        str = str.slice(firstPos);\n      }\n\n      arr.push(result[0]);\n      str = str.slice(result[0].length);\n      result = pat.exec(str);\n    }\n\n    if (str) {\n      arr.push(str);\n    }\n\n    return arr;\n  },\n\n  _addOutput: function (line) {\n    if (this.truncate) {\n      // Only replace single leading linebreak in the line after\n      // -%> tag -- this is the single, trailing linebreak\n      // after the tag that the truncation mode replaces\n      // Handle Win / Unix / old Mac linebreaks -- do the \\r\\n\n      // combo first in the regex-or\n      line = line.replace(/^(?:\\r\\n|\\r|\\n)/, '');\n      this.truncate = false;\n    }\n    if (!line) {\n      return line;\n    }\n\n    // Preserve literal slashes\n    line = line.replace(/\\\\/g, '\\\\\\\\');\n\n    // Convert linebreaks\n    line = line.replace(/\\n/g, '\\\\n');\n    line = line.replace(/\\r/g, '\\\\r');\n\n    // Escape double-quotes\n    // - this will be the delimiter during execution\n    line = line.replace(/\"/g, '\\\\\"');\n    this.source += '    ; __append(\"' + line + '\")' + '\\n';\n  },\n\n  scanLine: function (line) {\n    var self = this;\n    var d = this.opts.delimiter;\n    var o = this.opts.openDelimiter;\n    var c = this.opts.closeDelimiter;\n    var newLineCount = 0;\n\n    newLineCount = (line.split('\\n').length - 1);\n\n    switch (line) {\n    case o + d:\n    case o + d + '_':\n      this.mode = Template.modes.EVAL;\n      break;\n    case o + d + '=':\n      this.mode = Template.modes.ESCAPED;\n      break;\n    case o + d + '-':\n      this.mode = Template.modes.RAW;\n      break;\n    case o + d + '#':\n      this.mode = Template.modes.COMMENT;\n      break;\n    case o + d + d:\n      this.mode = Template.modes.LITERAL;\n      this.source += '    ; __append(\"' + line.replace(o + d + d, o + d) + '\")' + '\\n';\n      break;\n    case d + d + c:\n      this.mode = Template.modes.LITERAL;\n      this.source += '    ; __append(\"' + line.replace(d + d + c, d + c) + '\")' + '\\n';\n      break;\n    case d + c:\n    case '-' + d + c:\n    case '_' + d + c:\n      if (this.mode == Template.modes.LITERAL) {\n        this._addOutput(line);\n      }\n\n      this.mode = null;\n      this.truncate = line.indexOf('-') === 0 || line.indexOf('_') === 0;\n      break;\n    default:\n      // In script mode, depends on type of tag\n      if (this.mode) {\n        // If '//' is found without a line break, add a line break.\n        switch (this.mode) {\n        case Template.modes.EVAL:\n        case Template.modes.ESCAPED:\n        case Template.modes.RAW:\n          if (line.lastIndexOf('//') > line.lastIndexOf('\\n')) {\n            line += '\\n';\n          }\n        }\n        switch (this.mode) {\n        // Just executing code\n        case Template.modes.EVAL:\n          this.source += '    ; ' + line + '\\n';\n          break;\n          // Exec, esc, and output\n        case Template.modes.ESCAPED:\n          this.source += '    ; __append(escapeFn(' + stripSemi(line) + '))' + '\\n';\n          break;\n          // Exec and output\n        case Template.modes.RAW:\n          this.source += '    ; __append(' + stripSemi(line) + ')' + '\\n';\n          break;\n        case Template.modes.COMMENT:\n          // Do nothing\n          break;\n          // Literal <%% mode, append as raw output\n        case Template.modes.LITERAL:\n          this._addOutput(line);\n          break;\n        }\n      }\n      // In string mode, just add the output\n      else {\n        this._addOutput(line);\n      }\n    }\n\n    if (self.opts.compileDebug && newLineCount) {\n      this.currentLine += newLineCount;\n      this.source += '    ; __line = ' + this.currentLine + '\\n';\n    }\n  }\n};\n\n/**\n * Escape characters reserved in XML.\n *\n * This is simply an export of {@link module:utils.escapeXML}.\n *\n * If `markup` is `undefined` or `null`, the empty string is returned.\n *\n * @param {String} markup Input string\n * @return {String} Escaped string\n * @public\n * @func\n * */\nexports.escapeXML = utils.escapeXML;\n\n/**\n * Express.js support.\n *\n * This is an alias for {@link module:ejs.renderFile}, in order to support\n * Express.js out-of-the-box.\n *\n * @func\n */\n\nexports.__express = exports.renderFile;\n\n// Add require support\n/* istanbul ignore else */\nif (require.extensions) {\n  require.extensions['.ejs'] = function (module, flnm) {\n    console.log('Deprecated: this API will go away in EJS v2.8');\n    var filename = flnm || /* istanbul ignore next */ module.filename;\n    var options = {\n      filename: filename,\n      client: true\n    };\n    var template = fileLoader(filename).toString();\n    var fn = exports.compile(template, options);\n    module._compile('module.exports = ' + fn.toString() + ';', filename);\n  };\n}\n\n/**\n * Version of EJS.\n *\n * @readonly\n * @type {String}\n * @public\n */\n\nexports.VERSION = _VERSION_STRING;\n\n/**\n * Name for detection of EJS.\n *\n * @readonly\n * @type {String}\n * @public\n */\n\nexports.name = _NAME;\n\n/* istanbul ignore if */\nif (typeof window != 'undefined') {\n  window.ejs = exports;\n}\n"]},"metadata":{},"sourceType":"script"}